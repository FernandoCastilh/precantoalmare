/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package pousada;

import java.awt.Image;
import java.awt.Toolkit;
import java.net.URL;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.internal.runtime.regexp.joni.Syntax.Java;;


/**
 *
 * @author Secundário
 */
public class CadastrarReserva extends javax.swing.JFrame {

    /** Creates new form CadastrarReserva */
    String id;
    public CadastrarReserva() {
        initComponents();
        this.setLocationRelativeTo(null);
        URL url = this.getClass().getResource("logo-mobile.png"); 
        Image iconeTitulo = Toolkit.getDefaultToolkit().getImage(url); 
        this.setIconImage(iconeTitulo);
    }

private String getDateTime() {
        return null;
}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jButton2 = new javax.swing.JButton();
        txtDataCheckOut = new javax.swing.JFormattedTextField();
        txtAc2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbMv = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        rbTransfBanc = new javax.swing.JRadioButton();
        txtAc1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        lTexto = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtNome = new javax.swing.JTextPane();
        txtReserva = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtAc3 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane15 = new javax.swing.JScrollPane();
        in = new javax.swing.JTextPane();
        txtDeposito = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        cbNq = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        txtDataCheckIn = new javax.swing.JFormattedTextField();
        cbMt = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        cbCp = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        rbDinheiro = new javax.swing.JRadioButton();
        txtAc4 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtCarro = new javax.swing.JFormattedTextField();
        rbCartaoDebito = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabCli = new javax.swing.JTable();
        txtPesquisa = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastrar Reserva");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton2.setText("Salvar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        try {
            txtDataCheckOut.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataCheckOut.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDataCheckOutFocusLost(evt);
            }
        });

        txtAc2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAc2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Nº Quarto");

        cbMv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMvActionPerformed(evt);
            }
        });

        jLabel23.setText("Acompanhante 1:");

        buttonGroup1.add(rbTransfBanc);
        rbTransfBanc.setText("Transferencia Bancária");

        txtAc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAc1ActionPerformed(evt);
            }
        });

        jLabel16.setText("Placa do carro");

        lTexto.setText("Digite o nome do hóspede: ");

        txtNome.setEnabled(false);
        jScrollPane2.setViewportView(txtNome);

        jLabel19.setText("Como conhceu a pousada?");

        jLabel17.setText("Data Check in");

        jLabel25.setText("Acompanhante 3:");

        jLabel21.setText("Depósito realizado");

        txtAc3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAc3ActionPerformed(evt);
            }
        });

        jLabel22.setText("Pagamento Check in");

        jLabel14.setText("Motivo da Viagem");

        jScrollPane15.setViewportView(in);

        txtDeposito.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDepositoFocusLost(evt);
            }
        });

        jLabel15.setText("Meio de transporte");

        cbNq.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNqItemStateChanged(evt);
            }
        });
        cbNq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNqActionPerformed(evt);
            }
        });

        jLabel18.setText("Data Check out");

        try {
            txtDataCheckIn.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataCheckIn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDataCheckInFocusLost(evt);
            }
        });
        txtDataCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataCheckInActionPerformed(evt);
            }
        });

        cbMt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMtActionPerformed(evt);
            }
        });

        jLabel24.setText("Acompanhante 2:");

        cbCp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCpActionPerformed(evt);
            }
        });

        jLabel26.setText("Acompanhante 4:");

        jLabel2.setText("Nome");

        buttonGroup1.add(rbDinheiro);
        rbDinheiro.setText("Dinheiro");

        txtAc4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAc4ActionPerformed(evt);
            }
        });

        jLabel20.setText("Valor da reserva");

        try {
            txtCarro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("AAA-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        buttonGroup1.add(rbCartaoDebito);
        rbCartaoDebito.setText("Cartão de Débito");

        tabCli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Código", "Nome", "CPF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabCli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabCliMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tabCliMouseEntered(evt);
            }
        });
        jScrollPane3.setViewportView(tabCli);

        txtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyReleased(evt);
            }
        });

        jButton1.setText("Calcular");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lTexto)
                .addGap(364, 364, 364)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(184, 184, 184)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(66, 66, 66)
                        .addComponent(jLabel15)
                        .addGap(61, 61, 61)
                        .addComponent(jLabel19))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbMv, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbMt, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbCp, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(54, 54, 54)
                        .addComponent(jLabel18)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtDataCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(txtDataCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(cbNq, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(41, 41, 41)
                        .addComponent(jLabel21))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtReserva, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(txtDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(170, 170, 170)
                        .addComponent(jLabel16))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(380, 380, 380)
                        .addComponent(txtCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(5, 5, 5)
                        .addComponent(txtAc1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25)
                            .addComponent(jLabel26))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAc2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAc3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAc4, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbDinheiro)
                            .addComponent(rbCartaoDebito)
                            .addComponent(rbTransfBanc)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lTexto)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel2)))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(jLabel19))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbMv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbMt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbCp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel3)))
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDataCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDataCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(cbNq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton1))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtReserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDeposito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel16)))
                        .addGap(6, 6, 6)
                        .addComponent(txtCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(txtAc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbDinheiro)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(rbCartaoDebito))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(rbTransfBanc))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel25)
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel26))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtAc2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(txtAc3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(txtAc4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        final String BANCO = "jdbc:mysql://localhost/pousada"; //porta 3307 no IFRJ
        final String USUARIO = "root";
        final String SENHA = "";
            System.out.println("Data ="+txtDataCheckIn.getText());
            Calendar c = Calendar.getInstance(); SimpleDateFormat s = new SimpleDateFormat("dd/MM/yyyy");
            String dataAtuali = s.format(c.getTime());
            DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy"); 
            LocalDate dataAtual = LocalDate.parse(dataAtuali, formato);
            LocalDate checkin = LocalDate.parse(txtDataCheckIn.getText(), formato);
            LocalDate dataCheckin = LocalDate.parse(txtDataCheckIn.getText(), formato);
            LocalDate checkout = LocalDate.parse(txtDataCheckOut.getText(), formato);
            if(checkin.isBefore(dataAtual)){
            txtDataCheckIn.requestFocus();
            JOptionPane.showMessageDialog(null, "Data de Check-in Inválida");
            }
            if(checkin.equals(checkout)){
            txtDataCheckIn.requestFocus();
            JOptionPane.showMessageDialog(null, "Data de Check-in e Check-out iguais");
            }
            else if(checkout.isBefore(dataCheckin)){
                txtDataCheckOut.requestFocus();
                JOptionPane.showMessageDialog(null, "Data de Check-out Inválida");
            }
            else if(cbMv.getSelectedIndex() == -1){
                JOptionPane.showMessageDialog(null, "Motivo viagem inválido");
            }
            else if(cbMt.getSelectedIndex() == -1){
                JOptionPane.showMessageDialog(null, "Meio de transporte inválido");
            }
            else if(cbCp.getSelectedIndex() == -1){
                JOptionPane.showMessageDialog(null, "Como conheceu pousada inválido");
            }
            else if(txtReserva.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Valor da reserva inválido");
            }
            else if(txtDeposito.getText().equals("")){
                JOptionPane.showMessageDialog(null, "Valor do depósito inválido");
            }
            
             
            else{
            try {
            Connection conexao = DriverManager.getConnection(BANCO, USUARIO, SENHA);
            String sql = "select * from reserva, cliente where reserva.cpf = cliente.cpf and reserva.cod_quarto = " + cbNq.getSelectedItem().toString() + " and reserva.check_in >='" + checkin + "' and reserva.check_in <'" + checkout + "' union select * from reserva, cliente where reserva.cpf = cliente.cpf and reserva.cod_quarto = " + cbNq.getSelectedItem().toString() + " and reserva.check_out >'" + checkin + "' and reserva.check_out <='" + checkout + "'";

            PreparedStatement comando6 = conexao.prepareStatement(sql);
            ResultSet resultado6 = comando6.executeQuery();
                System.out.println(sql);
            if(resultado6.next()){
                JOptionPane.showMessageDialog(null, "Quarto já reservado nesta data em nome de: " + resultado6.getString("nome"));
            }
            else{
            
            
            PreparedStatement comando5 = conexao.prepareStatement("select * from mot_viagem where mot_viagem = '" + cbMv.getSelectedItem() +"'");
            ResultSet resultado5 = comando5.executeQuery();
            resultado5.next();
            int cod_mv = resultado5.getInt("cod_mv");
            
            PreparedStatement comando3 = conexao.prepareStatement("select * from meio_transp where meio_transp = '" + cbMt.getSelectedItem() +"'");
            ResultSet resultado3 = comando3.executeQuery();
            resultado3.next();
            int cod_mt = resultado3.getInt("cod_mt");
            
            PreparedStatement comando4 = conexao.prepareStatement("select * from conhe_pousada where conhe_pousada = '" + cbCp.getSelectedItem() +"'");
            ResultSet resultado4 = comando4.executeQuery();
            resultado4.next();
            int cod_cp = resultado4.getInt("cod_cp");
            String sql2 = "INSERT INTO reserva (check_in, check_out, placa_carro, reserva, deposito, inpag, acompanhante1, acompanhante2, acompanhante3, acompanhante4, mot_viagem, meio_transp, conhe_pousada, forma_in, cpf, cod_quarto) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement comando2 = conexao.prepareStatement(sql2);
            comando2.setDate(1, java.sql.Date.valueOf(checkin));
            comando2.setDate(2, java.sql.Date.valueOf(checkout));
            comando2.setString(3, txtCarro.getText());
            comando2.setDouble(4, Double.parseDouble(txtReserva.getText()));
            comando2.setDouble(5, Double.parseDouble(txtDeposito.getText()));
            comando2.setDouble(6, Double.parseDouble(in.getText()));
            comando2.setString(7, txtAc1.getText());
            comando2.setString(8, txtAc2.getText());
            comando2.setString(9, txtAc3.getText());
            comando2.setString(10, txtAc4.getText());

            comando2.setInt(11, cod_mv);

            comando2.setInt(12, cod_mt);

            comando2.setInt(13, cod_cp);
            String fP=null;
            if(rbDinheiro.isSelected())
            fP="Dinheiro";
            else if(rbCartaoDebito.isSelected())
            fP="Cartão de Débito";
            else if(rbTransfBanc.isSelected())
            fP="Transferência Bancária";
            comando2.setString(14, fP);
            comando2.setString(15, tabCli.getValueAt(tabCli.getSelectedRow(), 2).toString());
            comando2.setInt(16, Integer.parseInt(cbNq.getSelectedItem().toString()));

            int r = comando2.executeUpdate();
            if(r==1){
                JOptionPane.showMessageDialog(null, "Cadastro efetuado!");
                txtDataCheckIn.setText("");
                txtDataCheckOut.setText("");
                txtCarro.setText("");
                txtReserva.setText("");
                txtDeposito.setText("");
                in.setText("");
                txtAc1.setText("");
                txtAc2.setText("");
                txtAc3.setText("");
                txtAc4.setText("");


            }
            else
            JOptionPane.showMessageDialog(null, "Erro! Cadastro não realizado!");
        }}catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null, "Erro de conexão!"+ e);
        }}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
            final String BANCO = "jdbc:mysql://localhost/pousada";
            final String USUARIO = "root";
            final String SENHA = "";
       
                    
        try {
            Connection conexao = DriverManager.getConnection(BANCO, USUARIO, SENHA);
            PreparedStatement comando = conexao.prepareStatement("Select * from quarto order by num_quarto");
            ResultSet resultado = comando.executeQuery();
            while (resultado.next()) {
                cbNq.addItem(resultado.getString("num_quarto"));    
            }
            //cbNq.setSelectedIndex(-1);
            resultado.close();
        
            PreparedStatement comando2 = conexao.prepareStatement("Select * from mot_viagem order by cod_mv");
            ResultSet resultado2 = comando2.executeQuery();
            while (resultado2.next()) {
                cbMv.addItem(resultado2.getString("mot_viagem"));    
            }
            cbMv.setSelectedIndex(-1);
            resultado2.close();
      
       
            PreparedStatement comando3 = conexao.prepareStatement("Select * from meio_transp order by cod_mt");
            ResultSet resultado3 = comando3.executeQuery();
            while (resultado3.next()) {
                cbMt.addItem(resultado3.getString("meio_transp"));    
            }
            //resultado.close();
            cbMt.setSelectedIndex(-1);
       
            PreparedStatement comando4 = conexao.prepareStatement("Select * from conhe_pousada order by cod_cp");
            ResultSet resultado4 = comando4.executeQuery();
            while (resultado4.next()) {
                cbCp.addItem(resultado4.getString("conhe_pousada"));    
            }
            cbCp.setSelectedIndex(-1);
            resultado.close();
            Calendar c = Calendar.getInstance(); SimpleDateFormat s = new SimpleDateFormat("dd/MM/yyyy");
            String dataAtuali = s.format(c.getTime());
            System.out.println(dataAtuali);
            
            txtDataCheckIn.setText(dataAtuali);
            txtDataCheckOut.setText(dataAtuali);
        } catch (SQLException ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Verifique a conexão com o banco de dados.", "Erro!!!", 2);
        }
        //java.sql.Date checkin = new java.sql.Date(calendar.getTime().getTime());
    }//GEN-LAST:event_formWindowOpened

    private void txtAc2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAc2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAc2ActionPerformed

    private void cbMvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMvActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMvActionPerformed

    private void txtAc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAc1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAc1ActionPerformed

    private void txtAc3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAc3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAc3ActionPerformed

    private void txtDepositoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDepositoFocusLost
        in.setText(String.valueOf("R$" + (Double.parseDouble(txtReserva.getText())-Double.parseDouble(txtDeposito.getText()))));
    }//GEN-LAST:event_txtDepositoFocusLost

    private void cbNqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNqActionPerformed

    private void cbMtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMtActionPerformed

    private void cbCpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCpActionPerformed

    private void txtAc4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAc4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAc4ActionPerformed

    private void tabCliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabCliMouseClicked
        String codigo = tabCli.getValueAt(tabCli.getSelectedRow(), 0).toString();
        System.out.println("código cliente: "+codigo);
        try {
            final String BANCO = "jdbc:mysql://localhost/pousada";
            final String USUARIO = "root";
            final String SENHA = "";

            Connection conexao = DriverManager.getConnection(BANCO, USUARIO, SENHA);
            PreparedStatement comando = conexao.prepareStatement("Select * from cliente where codigo_cliente = ?");
            comando.setString(1, codigo);
            ResultSet resultado = comando.executeQuery();
            if (resultado != null && resultado.next()) {
                txtNome.setText(resultado.getString("nome"));
                id = resultado.getString("identidade");
            }
            resultado.close();
        } catch (SQLException ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Verifique a conexão com o banco de dados."+ex, "Erro!!!", 2);
        }
    }//GEN-LAST:event_tabCliMouseClicked

    private void tabCliMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabCliMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tabCliMouseEntered

    private void txtPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyReleased
        try {
            final String BANCO = "jdbc:mysql://localhost/pousada";
            final String USUARIO = "root";
            final String SENHA = "";

            Connection conexao = DriverManager.getConnection(BANCO, USUARIO, SENHA);
            PreparedStatement comando = conexao.prepareStatement("Select * from cliente where nome like ? order by nome");
            comando.setString(1, txtPesquisa.getText() + "%");
            ResultSet resultado = comando.executeQuery();
            DefaultTableModel model = (DefaultTableModel) tabCli.getModel();
            model.setNumRows(0);
            while (resultado.next()) {
                model.addRow(new Object[]{resultado.getString("codigo_cliente"), resultado.getString("nome"), resultado.getString("cpf"),});
            }
            resultado.close();
        } catch (SQLException ex) {
            System.out.println(ex);
            JOptionPane.showMessageDialog(null, "Verifique a conexão com o banco de dados." + ex, "Erro!!!", 2);
        }
    }//GEN-LAST:event_txtPesquisaKeyReleased

    private void cbNqItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNqItemStateChanged
        
    }//GEN-LAST:event_cbNqItemStateChanged

    private void txtDataCheckInFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataCheckInFocusLost
        Calendar c = Calendar.getInstance(); SimpleDateFormat s = new SimpleDateFormat("dd/MM/yyyy");
        String dataAtuali = s.format(c.getTime());
        DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy"); 
        LocalDate dataAtual = LocalDate.parse(dataAtuali, formato);
        LocalDate checkin = LocalDate.parse(txtDataCheckIn.getText(), formato);
        if(checkin.isBefore(dataAtual)){
            JOptionPane.showMessageDialog(null, "Data de Check-in Inválida");
        }
        
    }//GEN-LAST:event_txtDataCheckInFocusLost

    private void txtDataCheckOutFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataCheckOutFocusLost
        Calendar c = Calendar.getInstance(); SimpleDateFormat s = new SimpleDateFormat("dd/MM/yyyy");
        DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy"); 
        LocalDate dataCheckin = LocalDate.parse(txtDataCheckIn.getText(), formato);
        LocalDate checkout = LocalDate.parse(txtDataCheckOut.getText(), formato);
        if(checkout.isBefore(dataCheckin)){
            JOptionPane.showMessageDialog(null, "Data de Check-out Inválida");
        }
    }//GEN-LAST:event_txtDataCheckOutFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        final String BANCO = "jdbc:mysql://localhost/pousada"; //porta 3307 no IFRJ
        final String USUARIO = "root";
        final String SENHA = "";
        try {

            Connection conexao = DriverManager.getConnection(BANCO, USUARIO, SENHA);
            PreparedStatement comando = conexao.prepareStatement("Select diaria from quarto where num_quarto=? ");
            comando.setInt(1, Integer.parseInt(cbNq.getSelectedItem().toString()));
            ResultSet resultado = comando.executeQuery();
            if (resultado != null && resultado.next()) {
            DateTimeFormatter formato = DateTimeFormatter.ofPattern("dd/MM/yyyy"); 
            LocalDate dataCheckin = LocalDate.parse(txtDataCheckIn.getText(), formato);
            LocalDate checkout = LocalDate.parse(txtDataCheckOut.getText(), formato);
            Long diferenca = ChronoUnit.DAYS.between(dataCheckin, checkout);
            Integer n1= Integer.valueOf(diferenca.toString());
            int dI = Integer.parseInt(resultado.getString("diaria"));
            
                txtReserva.setText(Integer.toString(dI * n1));

            }
            resultado.close();
        }catch (SQLException ex) {
            Logger.getLogger(CadastrarReserva.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtDataCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataCheckInActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataCheckInActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastrarReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastrarReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastrarReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastrarReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastrarReserva().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbCp;
    private javax.swing.JComboBox<String> cbMt;
    private javax.swing.JComboBox<String> cbMv;
    private javax.swing.JComboBox<String> cbNq;
    private javax.swing.JTextPane in;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lTexto;
    private javax.swing.JRadioButton rbCartaoDebito;
    private javax.swing.JRadioButton rbDinheiro;
    private javax.swing.JRadioButton rbTransfBanc;
    private javax.swing.JTable tabCli;
    private javax.swing.JTextField txtAc1;
    private javax.swing.JTextField txtAc2;
    private javax.swing.JTextField txtAc3;
    private javax.swing.JTextField txtAc4;
    private javax.swing.JFormattedTextField txtCarro;
    private javax.swing.JFormattedTextField txtDataCheckIn;
    private javax.swing.JFormattedTextField txtDataCheckOut;
    private javax.swing.JTextField txtDeposito;
    private javax.swing.JTextPane txtNome;
    private javax.swing.JTextField txtPesquisa;
    private javax.swing.JTextField txtReserva;
    // End of variables declaration//GEN-END:variables

}
